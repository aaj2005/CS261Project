name: PR Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Get project version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build, test, and package with Maven
        run: mvn clean package --batch-mode

      - name: Check if JAR file exists
        run: |
          if [ ! -f "target/traffic_sim_with_dep.jar" ]; then
            echo "The built .deb file does not exist"
            exit 1
          fi
          echo "The .deb file exists"


  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: C:\Users\runneradmin\.m2\repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Get project version from pom.xml
        id: get_version
        run: |
          $VERSION = & mvn help:evaluate -Dexpression="project.version" -q -DforceStdout
          Write-Host "VERSION=$VERSION"
          echo "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build, test, and package with Maven
        run: mvn clean package --batch-mode

      - name: Check if JAR file exists
        run: |
          if (!(Test-Path -Path "target/traffic_sim_with_dep.jar")) {
            Write-Host "The built .jar file does not exist"
            exit 1
          }
          Write-Host "The .jar file exists"
        shell: pwsh



  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Get project version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build, test, and package with Maven
        run: mvn clean package --batch-mode

      - name: Check if JAR file exists
        run: |
          if [ ! -f "target/traffic_sim_with_dep.jar" ]; then
            echo "The built .deb file does not exist"
            exit 1
          fi
          echo "The .deb file exists"
