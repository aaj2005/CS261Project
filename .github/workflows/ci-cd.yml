name: TrafficSim CI/CD Workflow

on:
  push:
    branches:
      - project-setup # for local testing purposes
  pull_request:
    branches:
      - project-setup

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Check out the repository
    - name: Checkout code
      uses: actions/checkout@v2
    
    # Step 2: Set up JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'
        distribution: 'adoptopenjdk'

    # Step 3: Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    # Step 4: Run Maven build and tests
    - name: Build with Maven
      run: mvn clean install --batch-mode
    
    # Step 5: Package the application (optional - for self-contained app)
    - name: Package application as JAR
      run: mvn package --file pom.xml
    
    # Optional: If you want to use `jpackage` to bundle a native installer
    # Make sure you have JDK 21 set up for `jpackage`
    - name: Package application as self-contained installer
      run: |
        jpackage --input target/ \
                 --name my-app \
                 --main-jar my-app.jar \
                 --main-class com.example.app.Main \
                 --type exe
      # Replace the above with your actual project details for `jpackage`
    
    # Step 6: Upload build artifacts (JAR or installer)
    - name: Upload JAR or Installer as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-app-artifact
        path: target/*.jar   # or path to your installer (e.g., *.exe for Windows)
